import json
from pathlib import Path
from typing import Dict, Any


class SettingsManager:
    DEFAULT_SETTINGS = {
        'fix.capitalization': True,
        'fix.punctuate': False,
        'fix.german_noun_capitalization': True,
        'fix.name_capitalization': True,
        'fix.use_replacements': True,
        'fix.hotkey': 'Ctrl+F8',
        'fix.auto_fix_on_send': True,
        'rephrase.hotkey': 'Ctrl+F9',
        'rephrase.switch_phrasings_hotkey': 'Ctrl+F10',
        'rephrase.use_replacements': True,
        'rephrase.prompt': (
            'Provide 3 different concise rephrasing of '
            'the given text, separated by | characters. '
            'The first rephrasing should not be rephrased just correct all spelling, capitalization, grammar, and punctuation errors without changing wording.'
            '(If the text is longer than 30 words, only fix the text. Also keep the same language in all rephrasings). Here is the text:'
        ),
        'usage_stats': {
            'input_tokens': 0,
            'completion_tokens': 0,
            'total_cost': 0.0
        },
        'translate.hotkey': 'Ctrl+F11',
        'translate.use_replacements': True,
        'translate.alternative_language': 'german',
        'translate.prompt': (
            'You are a basic translater. (also additionally add punctuation and use correct spelling.) '
            'Translate the following text to English if it is in any other language than '
            'English, else translate it to %alternative_language% and ONLY answer with the '
            'translated message:'
        ),
        'custom_prompt.hotkey': 'Ctrl+F12',
        'custom_prompt.use_replacements': True,
        'custom_prompt.auto_custom_prompt': True,
        'auto_select_text': False,
        'provider_api_key': '',
        'api_endpoint': 'https://openrouter.ai/api/v1/chat/completions',
        'api_model': 'openai/gpt-4o-mini',
        'replacements': {
            'i': 'I',
            'jz': 'jetzt',
            'ig': 'I guess',
            'u': 'you',
            'ur': 'your',
            'r': 'are',
            'b4': 'before',
            'btw': 'by the way',
            'tbh': 'to be honest',
            'idc': 'I don’t care',
            'idk': 'I have no idea',
            'imho': 'in my humble opinion',
            'np': 'no problem',
            'nvm': 'never mind',
            'omg': 'oh my god',
            'pls': 'please',
            'tho': 'though',
            'thx': 'thanks',
            'ty': 'thank you',
            'wanna': 'want to',
            'gonna': 'going to',
            'gotta': 'got to',
            'k': 'okay',
            'ok': 'okay',
            'alr': 'alright',
            'lmk': 'let me know',
            'bc': 'because',
            'atm': 'at the moment',
            'ppl': 'people',
            'asap': 'as soon as possible',
            'brb': 'be right back',
            'ftw': 'for the win',
            'imo': 'in my opinion',
            'irl': 'in real life',
            'jk': 'just kidding',
            'fyi': 'for your information',
            'omw': 'on my way',
            'sry': 'sorry',
            'ily': 'I love you',
            'wyd': 'what are you doing',
            'ttyl': 'talk to you later',
            'fr': 'for real',
            'hbu': 'how about you',
            'rn': 'right now',
            'afaik': 'as far as I know',
            'smth': 'something',
            'bcuz': 'because',
            'cuz': 'because',
            'ttys': 'talk to you soon',
            'sup': 'what’s up',
            'imma': 'I am going to',
            'ofc': 'of course',
            'rlly': 'really',
            'yt': 'YouTube',
            'tt': 'TikTok',
            'dc': 'Discord',
            'insta': 'Instagram',
            'bb': 'Bye',
            "its": "it is",
            "didnt": "did not",
            "cant": "cannot",
            "dont": "do not",
            "doesnt": "does not",
            "wont": "will not",
            "wouldnt": "would not",
            "shouldnt": "should not",
            "couldnt": "could not",
            "isnt": "is not",
            "arent": "are not",
            "theres": "there is",
            "heres": "here is",
            "whos": "who is",
            "whats": "what is",
            "whens": "when is",
            "wheres": "where is",
            "whyre": "why are",
            "howre": "how are",
            "whyll": "who will",
            "youll": "you will",
            "theyll": "they will",
            "werent": "were not",
            "hasnt": "has not",
            "havent": "have not",
            "hadnt": "had not",
            "mustnt": "must not",
            "oughtnt": "ought not",
            "mightnt": "might not",
            "dunno": "do not know",
            "outta": "out of",
            "lotta": "lot of",
            "sorta": "sort of",
            "kinda": "kind of",
            "lemme": "let me",
            "gimme": "give me",
            "gotcha": "got you",
            "betcha": "bet you",
            "cmon": "come on",
            "dya": "do you",
            "wha": "what do",
            "gday": "good day",
            "ta": "thank you",
            "wassup": "what is up",
            "yknow": "you know",
            "gottit": "got it",
            "g'day": "good day",
            "coulda": "could have",
            "woulda": "would have",
            "shoulda": "should have",
            "d'you": "do you",
            "aint": "ain't",
            "y'all": "you all",
            "y'gotta": "you have got to",
            "tryna": "trying to",
            "let's": "let us",
            "here's": "here is",
            "that's": "that is",
            "there'll": "there will",
            "it'll": "it will",
            "they'd": "they would",
            "she'd": "she would",
            "he'd": "he would",
            "it'd": "it would",
            "we'd": "we would",
            "we're": "we are",
            "they're": "they are",
            "who'd": "who would",
            "who'll": "who will",
            "who're": "who are",
            "who's": "who is",
            "we've": "we have",
            "you've": "you have",
            "I'll": "I will",
            "you'd": "you would",
            "I'd": "I would",
            "he's": "he is",
            "she's": "she is",
            "it's": "it is",
            "they've": "they have",
            "might've": "might have",
            "must've": "must have",
            "not've": "not have",
            "that'd": "that would",
            "this'll": "this will",
            "those'll": "those will",
            "these'll": "these will",
            "what'll": "what will",
            "where'd": "where did",
            "why'd": "why did",
            "how'd": "how did",
            "won't": "will not",
            "needn't": "need not",
            "ma'am": "madam",
            "how's": "how is",
            "y'know": "you know",
            "should've": "should have",
            "could've": "could have",
            "he'll": "he will",
            "she'll": "she will",
            "I'd've": "I would have",
            "you'd've": "you would have",
            "they'd've": "they would have",
            "we'd've": "we would have",
            "it'd've": "it would have",
            "there's": "there is",
            "we'll": "we will",
            "they'll": "they will",
            "y'all'd've": "you all would have",
            "can't've": "cannot have",
            "couldn't've": "could not have",
            "mightn't've": "might not have",
            "mustn't've": "must not have",
            "needn't've": "need not have",
            "shan't": "shall not",
            "shan't've": "shall not have",
            "won't've": "will not have",
            "y'ain't": "you are not",
            "y'ain't've": "you are not have",
            "why're": "why are",
            "what're": "what are",
            "there're": "there are",
            "where're": "where are",
            "what've": "what have",
            "where've": "where have",
            "why've": "why have",
            "couldn't": "could not",
            "haven't": "have not",
            "aren't": "are not",
            "wasn't": "was not",
            "weren't": "were not",
            "didn't": "did not",
            "doesn't": "does not",
            "hasn't": "has not",
            "don't": "do not",
            "let's've": "let us have",
            "somebody'd": "somebody would",
            "somebody'll": "somebody will",
            "somebody's": "somebody is",
            "something'd": "something would",
            "something'll": "something will",
            "something's": "something is",
            "sometime's": "sometime is",
            "sometimes've": "sometimes have",
            "someone'd": "someone would",
            "someone'll": "someone will",
            "someone's": "someone is",
            "nobody'd": "nobody would",
            "nobody'll": "nobody will",
            "nobody's": "nobody is",
            "everybody'd": "everybody would",
            "everybody'll": "everybody will",
            "everybody's": "everybody is",
            "everything'd": "everything would",
            "everything'll": "everything will",
            "everything's": "everything is",
            "nothing'd": "nothing would",
            "nothing'll": "nothing will",
            "nothing's": "nothing is",
            "anybody'd": "anybody would",
            "anybody'll": "anybody will",
            "anybody's": "anybody is",
            "anything'd": "anything would",
            "anything'll": "anything will",
            "anything's": "anything is",
            "oughtn't've": "ought not have",
            "hadn't've": "had not have",
            "hadn't": "had not",
            "y'weren't": "you were not",
            "I'dn't": "I had not",
            "there'd": "there would",
            "that'll": "that will",
            "that'd've": "that would have",
            "which'd": "which would",
            "where'd've": "where did have",
            "who'd've": "who would have",
            "you'll've": "you will have",
            "I'll've": "I will have",
            "we'll've": "we will have",
            "they'll've": "they will have",
            "she'll've": "she will have",
            "he'll've": "he will have",
            "it'll've": "it will have",
            "who'll've": "who will have",
            "y'all've": "you all have",
            "y'all're": "you all are",
            "how'll": "how will",
            "how'd've": "how did have",
            "mustn't": "must not",
            "wouldn't've": "would not have",
            "who's'll": "who is will",
            "you's'll": "you is will",
            "o'clock": "of the clock",
            "yessir": "yes sir",
            "yes'm": "yes madam",
            "cause": "because",
            "yk": "you know",
            "ki": "KI",
            "ai": "AI",
            "machts": "macht's",
            "tuts": "tut's",
            "kommts": "kommt's",
            "bleibts": "bleibt's",
            "brauchts": "braucht's",
            "hasts": "hast's",
            "gibts": "gibt's",
            "weiss": "weiß",
            "hats": "hat's",
            "gehts": "geht's",
            "bringts": "bringt's",
            "hols": "hol's",
            "nims": "nimm's",
            "gebts": "gebt's",
            "sags": "sag's",
            "finds": "find's",
            "hörts": "hört's",
            "wars": "war's",
            "isses": "ist es",
            "schauts": "schaut's",
            "kostets": "kostet's",
            "zähls": "zähl's",
            "wirds": "wird's",
            "verstehsts": "verstehst's",
            "siehs": "sieh's",
            "meins": "mein's",
            "kennts": "kennt's",
            "triffs": "triff's",
            "solls": "soll's",
            "werds": "werd's",
            "frags": "frag's",
            "öffnets": "öffnet's",
            "klappts": "klappt's",
            "habs": "hab's",
            "zeigs": "zeig's",
            "wissens": "wissen's",
            "singts": "singt's",
            "bleibs": "bleib's",
            "packts": "packt's",
            "stellsts": "stellst's",
            "lasss": "lass's",
            "nimmts": "nimmt's",
            "tuers": "tuer's",
            "vergisss": "vergiss's",
            "reichts": "reicht's",
            "setzts": "setzt's",
            "bringes": "bringe es",
            "fällts": "fällt's",
            "wollns": "wollen's",
            "gehtens": "gehen es",
            "gebens": "geben's",
            "hättes": "hätte es",
            "möchts": "möcht's",
            "bittest": "bittes",
            "erklärs": "erklär's",
            "lassens": "lassen's",
            "packes": "pack es",
            "teils": "teil's",
            "sehns": "sehen's",
            "wills": "will's",
            "singst": "sing's",
            "rufsts": "rufst's",
            "dürfens": "dürfen's",
            "machs": "mach's",
            "stehsts": "stehst's",
            "redts": "redt's",
            "stellts": "stellt's",
            "rennens": "rennen's",
            "lachtst": "lacht's",
            "rufes": "rufe es",
            "seins": "sein's",
            "wirsts": "wirst's",
            "suchens": "suchen's",
            "ziehns": "ziehen's",
            "neigs": "neig's",
            "bittes": "bitte es",
            "stehns": "stehen's",
            "lesens": "lesen's",
            "wähles": "wähle es",
            "kostest": "kostes",
            "kriegst": "krieg's",
            "laufsts": "laufst's",
            "schreis": "schrei's",
            "räumts": "räumt's",
            "brennst": "brennt's",
            "fährts": "fährt's",
            "könnts": "könnt's",
            "springst": "spring's",
            "sagsts": "sagst's",
            "spürts": "spürt's",
            "probierst": "probier's",
            "schläfst": "schläf's",
            "siehns": "sehen's",
            "fragts": "fragt's",
            "fühls": "fühl's"
        }
    }

    def __init__(self) -> None:
        self.settings: Dict[str, Any] = {}
        self.app_data = Path.home() / 'AppData' / 'Roaming' / 'Autocorrect'
        self.settings_file = self.app_data / 'settings.json'
        self._initialize_settings()

    def _initialize_settings(self) -> None:
        self.app_data.mkdir(parents=True, exist_ok=True)
        self.load_settings()

    def load_settings(self) -> None:
        try:
            if self.settings_file.exists():
                with self.settings_file.open('r', encoding='utf-8') as f:
                    self.settings = json.load(f)
            else:
                self.reset_settings()
        except (json.JSONDecodeError, PermissionError) as e:
            print(f"Error loading settings: {e}")
            self.reset_settings()

    def save_settings(self) -> None:
        try:
            with self.settings_file.open('w', encoding='utf-8') as f:
                json.dump(self.settings, f, indent=4, ensure_ascii=False)
        except (PermissionError, IOError) as e:
            print(f"Error saving settings: {e}")

    def get_setting(self, key: str, default: Any = None) -> Any:
        return self.settings.get(key, default)

    def get_default_setting(self, key: str, default: Any = None) -> Any:
        return self.DEFAULT_SETTINGS.get(key, default)

    def set_setting(self, key: str, value: Any) -> None:
        self.settings[key] = value
        self.save_settings()

    def get_replacements(self) -> Dict[str, str]:
        return self.settings.get('replacements', {})

    def reset_settings(self) -> None:
        usage_stats = self.settings.get('usage_stats', self.DEFAULT_SETTINGS['usage_stats']).copy()
        provider_api_key = self.settings.get('provider_api_key', self.DEFAULT_SETTINGS['provider_api_key'])

        self.settings = self.DEFAULT_SETTINGS.copy()
        self.settings['usage_stats'] = usage_stats
        self.settings['provider_api_key'] = provider_api_key
        self.save_settings()

    def update_usage(self, input_tokens: int, completion_tokens: int) -> None:
        current_input = self.settings.get('usage_stats', {}).get('input_tokens', 0)
        current_completion = self.settings.get('usage_stats', {}).get('completion_tokens', 0)

        new_input = current_input + input_tokens
        new_completion = current_completion + completion_tokens

        # $0.15 per million input tokens
        # $0.60 per million completion tokens
        input_cost = (new_input / 1_000_000) * 0.15
        completion_cost = (new_completion / 1_000_000) * 0.60
        total_cost = input_cost + completion_cost
        self.settings['usage_stats'] = {
            'input_tokens': new_input,
            'completion_tokens': new_completion,
            'total_cost': total_cost
        }
        self.save_settings()

